{"version":3,"sources":["main.js"],"names":["jQuery","find","addClass","end"],"mappings":"AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAKA;AACA;AACE;AACF;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACAA,MAAM,CAAC,OAAD,CAAN,CACGC,IADH,CACQ,QADR,EAEGC,QAFH,CAEY,KAFZ,EAGGA,QAHH,CAGY,MAHZ,EAIGA,QAJH,CAIY,OAJZ,EAKA;AAGA;AACA;AATA,CAUGC,GAVH,GAUQ;AAVR,CAWGD,QAXH,CAWY,QAXZ,GAWqB;AAErB;AACA;AACA;AACA","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["// jQuery('.test')//不返回元素们，返回api 对象\r\n//   .addClass('red')// this就是 api\r\n//   .addClass('blue')// this就是 api\r\n//   .addClass('green')//链式操作\r\n\r\n\r\n// // obj.fn(p1) //函数里的 this 就是 obj\r\n// // obj.fn.call(obj,p1)\r\n\r\n// var obj = new Object()\r\n\r\n\r\n\r\n// //find\r\n// const x1 =  jQuery('.test1').find('.child')\r\n// //获取child1，然后在里面去查找find，找什么呢？找类为child的元素\r\n// console.log(x1)//一个test1的时候\r\n\r\n\r\n\r\n\r\n//多个test\r\n//把index.html的div改成了test，这时如果得到test，会有三个div\r\n  //，三个div里分别去找child，一共会的3+2+1=6个child\r\n// jQuery('.test').find('.child').addClass('red')\r\n\r\n//如果你通过需要改变对象的话，就再构造一个jQuery对象，jQuery api去操作\r\n// const api1 = jQuery('.test')//首先获取到test，然后在上面加上了blue\r\n// api1.addClass('blue')\r\n\r\n// const api2 = api1.find('.child').addClass('red')//然后用api1获取到child，child前加red\r\n\r\n// api1.addClass('green')//再杀一个回马枪用api1添加一个green。\r\n// //如何让addClass操作的是class而不是child\r\n\r\n\r\n//简化后：\r\njQuery('.test')\r\n  .find('.child') \r\n  .addClass('red')\r\n  .addClass('blue')\r\n  .addClass('green')\r\n//我们先找到.test，然后在找到里面所有的child，然后在child上面加个red，还可以加其他的\r\n\r\n\r\n//操作.child后又想返回.test，在test身上加：\r\n//方法一：加个变量\r\n  .end()//当前child结束了，只有end就回去上一层的api\r\n  .addClass('yellow')//此时yellow在test上\r\n\r\n//   //中间命个名\r\n//   const api1 = jQuery('.test')\r\n//   const api2 = api1.find('.child') .addClass('red') .addClass('blue') .addClass('green')\r\n//   const oldApi = api2.end() .addClass('yellow')"]}